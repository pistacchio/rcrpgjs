{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["const _        = require('lodash'),\n      readline = require('readline');\n\n\n///////////////////\n// LODASH IMPORT //\n///////////////////\n\n// import all lodash functions to the main namespace, but isNaN not to cause conflicts\n_.each(_.keys(_), k => global[k === 'isNaN' ? '_isNaN' : k] = _[k]);\n\n///////////////\n// CONSTANTS //\n///////////////\n\nconst DIRECTIONS = {\n  n: [ 0, -1,  0],\n  s: [ 0,  1,  0],\n  e: [-1,  0,  0],\n  w: [ 1,  0,  0],\n  u: [ 0,  0, -1],\n  d: [ 0,  0,  1]\n};\n\n/////////////\n// HELPERS //\n/////////////\n\nfunction findDirection (world, dir, longName=false) {\n  const maybeDirection = find(world.commands, c => contains(first(c), dir)),\n        dirLetter      = first(first(maybeDirection));\n\n  if (maybeDirection && has(DIRECTIONS, dirLetter)) {\n    return longName ? first(maybeDirection)[1] : dirLetter;\n  }\n}\n\nfunction makeRoom(location) {\n  return [location, null, compact([\n    random(0, 2) === 0 ? 'sledge': null,\n    random(0, 2) === 0 ? 'ladder': null,\n    random(0, 2) === 0 ? 'gold':   null\n  ])];\n}\n\nfunction listToDescriptiveString (lst) {\n  if (!lst) return;\n  if (lst.length === 1) return first(lst);\n  return dropRight(lst).join(', ') + ' and ' + last(lst);\n}\n\nfunction itemsToDescriptiveItems (items) {\n return map(items, i => {\n    switch (i) {\n      case 'sledge': return 'a sledge';\n      case 'ladder': return 'a ladder';\n      case 'gold':   return 'some gold';\n    }\n  });\n}\n\n//////////////\n// MESSAGES //\n//////////////\n\nfunction help () {\n  return `You need a sledge to dig rooms and ladders to go upwards.\nValid commands are: directions (north, south...), dig, take, drop, equip, inventory and look.\nAdditionally you can tag rooms with the 'name' command and alias commands with 'alias'.\nHave fun!\"\n`;\n}\n\nfunction welcome () {\n  console.log(`Welcome to the dungeon!\nGrab the sledge and make your way to room 1,1,5 for a non-existant prize!\n`);\n  console.log(help());\n}\n\n/////////////\n// ACTIONS //\n/////////////\n\nfunction gotoRoom (direction, world) {\n  const wantedRoom = zipWith(world.player.location, DIRECTIONS[direction], add),\n        room       = find(world.rooms, r => isEqual(first(r), world.player.location));\n\n  if (direction === 'u' && !contains(room[2], 'ladder')) {\n    console.log(\"You can't go upwards without a ladder!\");\n  } else {\n    if (find(world.rooms, r => isEqual(first(r), wantedRoom))) {\n      world.player.location = wantedRoom;\n      look(world);\n    } else {\n      console.log(\"There's no exit in that direction!\");\n    }\n  }\n\n  return world\n}\n\nfunction dig (world, [direction]) {\n  let dir,\n      dirLongName,\n      wantedRoom;\n\n  if (!direction) {\n    console.log('Where do you want to dig?');\n    return world\n  }\n  if (!(dir = findDirection(world, direction))) {\n      console.log('That is not a direction I recognize');\n      return world;\n  }\n  if (!contains(world.player.inventory, 'sledge')) {\n    console.log('With your bare hands?');\n    return world;\n  }\n\n  dirLongName = findDirection(world, direction, true);\n  wantedRoom  = zipWith(world.player.location, DIRECTIONS[dir], add);\n\n  if (find(world.rooms, r => isEqual(first(r), wantedRoom))) {\n    console.log('There is already an exit, there!');\n    return world;\n  }\n\n  world.rooms.push(makeRoom(wantedRoom));\n  console.log(`There is now an exit ${dirLongName}ward`);\n  return world;\n}\n\nfunction look (world) {\n  const room = find(world.rooms, r => isEqual(first(r), world.player.location)),\n\n        itemsOnFloor    = itemsToDescriptiveItems(room[2]),\n        itemsOnFloorStr = isEmpty(itemsOnFloor)\n                          ? ''\n                          : (itemsOnFloor.length === 1\n                            ? itemsOnFloor[0]\n                            : listToDescriptiveString(itemsOnFloor)),\n\n        exits = chain(DIRECTIONS)\n                .map((d, kd) => [kd, zipWith(d, first(room), add)])\n                .filter(r => find(world.rooms, rr => isEqual(first(rr), r[1])))\n                .map(d => find(world.commands, c => {\n                  return contains(first(c), first(d))\n                })[0][1])\n                .value(),\n        exitsStr = isEmpty(exits)\n                   ? ''\n                   : (exits.length === 1\n                     ? `There is one exit: ${exits[0]}.`\n                     : `You can see the following exits: ${listToDescriptiveString(exits)}.`);\n\n  console.log(\n    (room[1] ? room[1] : `Room at ${world.player.location[0]}, ${world.player.location[1]}, ${world.player.location[2]}`) + '\\n' +\n    (!itemsOnFloorStr ? '' : `On the floor you can see ${itemsOnFloorStr}.\\n`) +\n    exitsStr\n  );\n\n  return world;\n}\n\nfunction inventory (world) {\n  if (world.player.inventory.length === 0) {\n    console.log('You are not carrying anything');\n  } else {\n    console.log(`You are carrying: ${listToDescriptiveString(itemsToDescriptiveItems(world.player.inventory))}`);\n  }\n\n  return world;\n}\n\nfunction take (world, [item]) {\n  const room = find(world.rooms, r => isEqual(first(r), world.player.location))\n\n  if (!item) {\n    console.log('Take what?');\n    return world;\n  }\n\n  if (item === 'all') {\n    if (isEmpty(room[2])) {\n      console.log('There is nothing to take here');\n    } else{\n      world.player.inventory = uniq(world.player.inventory.concat(room[2] || []));\n      room[2] = [];\n      console.log('All items taken');\n    }\n    return world;\n  }\n\n  if (!contains(room[2], item)) {\n    console.log(\"You can't see anything like that here\");\n    return world;\n  }\n\n  world.player.inventory = uniq(world.player.inventory.concat([item]));\n  pull(room[2], item);\n  console.log('Taken');\n\n  return world\n}\n\nfunction drop (world, [item]) {\n  const room = find(world.rooms, r => isEqual(first(r), world.player.location))\n\n  if (!item) {\n    console.log('Drop what?');\n    return world;\n  }\n\n  if (item === 'all') {\n    if (isEmpty(world.player.inventory)) {\n      console.log('You have nothing to drop');\n    } else{\n      room[2] = uniq(room[2].concat(world.player.inventory || []));\n      world.player.inventory = [];\n      console.log('All items dropped');\n    }\n    return world;\n  }\n\n  if (!contains(world.player.inventory, item)) {\n    console.log(\"You don't have that item\");\n    return world;\n  }\n\n  room[2] = uniq(room[2].concat([item]));\n  pull(world.player.inventory, item);\n  console.log('Dropped');\n\n  return world\n}\n\nfunction equip (world, [item]) {\n  if (!item) {\n    console.log('What do you want to equip?');\n    return world;\n  }\n  if (!contains(world.player.inventory, item)) {\n    console.log(\"You don't have such object\");\n    return world;\n  }\n\n  world.player.equipped = item;\n  console.log('Item equipped!');\n  return world;\n}\n\nfunction unequip (world, [item]) {\n  if (!item) {\n    console.log('What do you want to unequip?');\n    return world;\n  }\n  if (item !== world.player.equipped) {\n    console.log(\"You don't have it equipped\");\n    return world;\n  }\n\n  world.player.equipped = null;\n  console.log('Item unequipped!');\n  return world;\n}\n\nfunction alias (world, [cmd, al]) {\n  let foundCommand;\n\n  if (!cmd && !al) {\n    console.log('Aliases:' + chain(world.commands)\n                .filter(c => first(c).length > 1)\n                .map(first)\n                .reduce((acc, c) => `${acc}\\n${first(c)} => ${rest(c).join(', ')}`, '')\n                .value());\n    return world;\n  }\n\n  if (!(foundCommand = find(world.commands, c => contains(first(c), cmd)))) {\n    console.log('There is no such command');\n    return world\n  }\n\n  if (!al) {\n    let aliases = reject(first(foundCommand), c => c === cmd);\n\n    if (isEmpty(aliases)) {\n      console.log(`There are no aliases for ${cmd}`);\n    } else {\n      console.log(`Aliases for \"${cmd}\":  ${aliases.join(', ')}`);\n    }\n\n    return world;\n  }\n\n  foundCommand[0] = uniq(first(foundCommand).concat([al]));\n  console.log('Alias assigned');\n  return world;\n}\n\n//////////////////////\n// INPUT PROCESSING //\n//////////////////////\n\nfunction processInput(input, world) {\n  const splitInput         = trim(input).split(/\\s+/g),\n        [command, options] = [first(splitInput), rest(splitInput)],\n        commandFn          = find(world.commands, c => contains(first(c), command.toLowerCase()));\n\n  if (commandFn) {\n    return commandFn[1](world, options);\n  } else {\n    console.log(\"I don't know what you mean.\");\n    return world;\n  }\n}\n\n///////////////\n// MAIN LOOP //\n///////////////\n\n(function runGame () {\n  let world = {\n    rooms: [\n      [[0, 0, 0],  \"The room where it all started...\", ['ladder', 'sledge']],\n      [[1, 1 , 5], \"You found it! Lots of gold!\"]\n    ],\n    commands: [\n      [['n', 'north'], partial(gotoRoom, 'n')],\n      [['s', 'south'], partial(gotoRoom, 's')],\n      [['w', 'west'],  partial(gotoRoom, 'w')],\n      [['e', 'east'],  partial(gotoRoom, 'e')],\n      [['d', 'down'],  partial(gotoRoom, 'd')],\n      [['u', 'up'],    partial(gotoRoom, 'u')],\n\n      [['help'],           help],\n      [['dig'],            dig],\n      [['l', 'look'],      look],\n      [['i', 'inventory'], inventory],\n      [['take'],           take],\n      [['drop'],           drop],\n      [['equip'],          equip],\n      [['unequip'],        unequip],\n      [['alias'],          alias]\n    ],\n    player: {\n      location:  [0, 0, 0],\n      inventory: ['sledge'],\n      equipped:  null\n    }\n  };\n\n  welcome();\n\n  process.stdin.resume();\n  process.stdin.setEncoding('utf8');\n\n  process.stdin.on('data', input => world = processInput(input, world))\n})();"],"sourceRoot":"/source/"}